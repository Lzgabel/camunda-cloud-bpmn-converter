# If this workflow is triggered by a push to $default_branch, it
#        deploys a SNAPSHOT
# If this workflow is triggered by publishing a Release, it
#        deploys a RELEASE with the selected version
#        updates the project version by incrementing the patch version
#        commits the version update change to the repository's default branch ($default_branch).
name: Build, test and deploy artifacts with Maven
on:
  pull_request: { }
  push: { }
  workflow_dispatch: { }
  release:
    types: [ published ]
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3.0.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up Java environment
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          distribution: temurin
          gpg-private-key: ${{ secrets.GPG_SECRET }}
          gpg-passphrase: MAVEN_CENTRAL_GPG_PASSPHRASE
      - name: Build
        id: build
        run: mvn -B -U -Dsurefire.rerunFailingTestsCount=5 clean install
      - if: github.event.release || github.event_name == 'workflow_dispatch'
        name: Deploy SNAPSHOT / Release
        uses: camunda-community-hub/community-action-maven-release@v1
        with:
          release-version: ${{ github.event.release.tag_name }}
          release-profile: community-action-maven-release
          nexus-usr: ${{ secrets.OSSRH_USER }}
          nexus-psw: ${{ secrets.GPG_PASSWORD }}
          maven-usr: ${{ secrets.OSSRH_USER }}
          maven-psw: ${{ secrets.GPG_PASSWORD }}
          maven-gpg-passphrase: ${{ secrets.GPG_PASSWORD }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        id: release
      - if: github.event.release
        name: Attach artifacts to GitHub Release (Release only)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.release.outputs.artifacts_archive_path }}
          asset_name: ${{ steps.release.outputs.artifacts_archive_path }}
          asset_content_type: application/zip
